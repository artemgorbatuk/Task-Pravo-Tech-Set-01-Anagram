string[] data = { "сестра", "подстожье", "вицмундир", "духовенство", "несценичность", "кальцекс", "липа", "засылание", "существенное", "полцены", "парораспределитель", "стресс", "текстильщица", "стоп", "стереобат", "ламинария", "трансплантология", "диктор", "одонтолог", "пораша", "монастырь", "ракета-носитель", "перемотчик", "фотохромия", "господин", "натруска", "дымарь", "пролом", "вылизывание", "контрамарка", "фасовщица", "комбинирование", "терпентин", "золовка", "накрапливание", "пила", "рассадник", "полиморфизм", "вопросник", "взблеск", "колонновожатый", "пригородка", "катет", "пригорожанин", "пухоед", "звукоусиление", "шевеление", "накат", "правдоискатель", "индивид", "менделист", "обсадка", "шлих", "перекупывание", "подматывание", "самопомощь", "облюбовывание", "реалистичность", "мшаник", "турпан", "разбитость", "дифференциация", "южанин", "пятиклассник", "чадра", "уматывание", "пакет", "превознесение", "святошество", "штундистка", "шалфей", "бурун", "акант", "ваер", "вышивальщица", "гувернантка", "неправота", "пост", "обозреватель", "магнитология", "славистка", "храбрость", "закусочная", "открытка", "просачивание", "душица", "стереофония", "антенна", "интрузив", "чеканчик", "выгачивание", "метафизичность", "фронтовик", "несуразность", "водоочиститель", "меласса", "пост", "ножевище", "самнит", "дезинформатор", "мадригал" };

Func<string[], IEnumerable<string>> GetAnagrams = (data) =>
{
    var anagrams = data
        
        // шаг1. удаление дубликатов
        .GroupBy(p => p)
        .Select(p => p.Key)

        // шаг2. удаление пустых значений
        .Where(p => !string.IsNullOrWhiteSpace(p))

        // шаг3. для каждого слова создаем дополнительное слово-ключ отсортированное по алфавиту
        .Select(p => new { word = p, key = new string(p.Order().ToArray()) })

        // шаг4. группируем по слову ключу
        .GroupBy(p => p.key)

        // шаг5. к каждому слову ключу создаем список слов и их количество
        .Select(g => new { words = g.Select(p => p.word), key = g.Key, count = g.Count() })

        // шаг6. находим анаграммы
        .Where(p => p.count > 1)

        // шаг7. создаем список анаграмм в виде слово - ключ
        .SelectMany(p => p.words.Select(word => $"{word} - {p.key}"));

    return anagrams;
};

Console.WriteLine(new string('-', 40));

var anagrams = GetAnagrams(data);

foreach (var anagram in anagrams)
{
    Console.WriteLine(anagram);
}

Console.WriteLine(new string('-', 40));

Console.ReadLine();